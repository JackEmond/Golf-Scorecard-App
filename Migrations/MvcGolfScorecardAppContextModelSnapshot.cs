// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcGolfScorecardApp.Data;

#nullable disable

namespace MvcGolfScorecardApp.Migrations
{
    [DbContext(typeof(MvcGolfScorecardAppContext))]
    partial class MvcGolfScorecardAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MvcGolfScorecardApp.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("HoleEight")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleEighteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleEleven")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFifteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFive")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFourteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleNine")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleOne")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSeven")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSeventeen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSix")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSixteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleThirteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleThree")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTwelve")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTwo")
                        .HasColumnType("tinyint");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("MvcGolfScorecardApp.Models.Scorecard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePlayed")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HoleEight")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleEighteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleEleven")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFifteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFive")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleFourteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleNine")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleOne")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSeven")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSeventeen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSix")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleSixteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleThirteen")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleThree")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTwelve")
                        .HasColumnType("tinyint");

                    b.Property<byte>("HoleTwo")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Scorecard");
                });

            modelBuilder.Entity("MvcGolfScorecardApp.Models.Scorecard", b =>
                {
                    b.HasOne("MvcGolfScorecardApp.Models.Course", "Course")
                        .WithMany("Scorecards")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MvcGolfScorecardApp.Models.Course", b =>
                {
                    b.Navigation("Scorecards");
                });
#pragma warning restore 612, 618
        }
    }
}
